<Window x:Class="WorkoutApp.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WorkoutApp.View"
        xmlns:vm="clr-namespace:WorkoutApp.ViewModel"
        xmlns:cv="clr-namespace:WorkoutApp.ViewModel.Converters"
        mc:Ignorable="d"
        Title="Poor Yorrick Workouts" Height="550" Width="Auto" SizeToContent="Width">
    <Window.Resources>
        <vm:MainVM x:Key="vm"/>
        <cv:BoolToVisibilityHiddenConverter x:Key="b2vh"/>
        <cv:BoolToVisibilityCollapsedConverter x:Key="b2vc"/>
        <cv:EnumToRadioBoolConverter x:Key="e2r"/>
        <SolidColorBrush x:Key="PlayPauseBarColour" Color="#2f80ba"/>
        <SolidColorBrush x:Key="ListViewContrastColour" Color="#5890cc"/>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
        </Style>
        <Style TargetType="Label" x:Key="TimeSpanLabel">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Label" x:Key="WorkoutProperty">
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>
        <Style TargetType="ListViewItem" x:Key="NoMouseOver">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="Clock">
            <Setter Property="FontSize" Value="90"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="DSEG7 Modern Mini"/>
            <Setter Property="FontStyle" Value="Italic"/>
            <Style.Triggers>
                <Trigger Property="Text" Value="3">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="Text" Value="2">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="Text" Value="1">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="CustomWorkoutButton">
            <Setter Property="Background" Value="AliceBlue"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style TargetType="RadioButton" x:Key="ExerciseFilter">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
    </Window.Resources>
    <Grid DataContext="{Binding Source={StaticResource vm}}">
        <!--Coloumn Styles Here-->
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!--Exercise Coloumn-->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Setter Property="Width"  Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="cm:DesignerProperties.IsInDesignMode" Value="True">
                                <Setter Property="Width" Value="290"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={StaticResource vm}, Path=BuildingWorkout, Mode=OneWay}" Value="True">
                                <Setter Property="Width" Value="290"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--Workout Coloumn-->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Setter Property="Width" Value="275"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={StaticResource vm}, Path=WorkoutActive, Mode=OneWay}" Value="True">
                                <Setter Property="Width" Value="0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={StaticResource vm}, Path=BuildingWorkout, Mode=OneWay}" Value="True">
                                <Setter Property="Width" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--Selected Workout Coloumn-->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Setter Property="Width"  Value="275"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={StaticResource vm}, Path=BuildingWorkout, Mode=OneWay}" Value="True">
                                <Setter Property="Width" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--Timer Coloumn-->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Setter Property="Width" Value="275"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={StaticResource vm}, Path=WorkoutActive, Mode=OneWay}" Value="False">
                                <Setter Property="Width" Value="0"/>
                            </DataTrigger>
                            <Trigger Property="cm:DesignerProperties.IsInDesignMode" Value="True">
                                <Setter Property="Width" Value="275"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--Custom Workout Coloumn-->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Setter Property="Width"  Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="cm:DesignerProperties.IsInDesignMode" Value="True">
                                <Setter Property="Width" Value="275"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Source={StaticResource vm}, Path=BuildingWorkout, Mode=OneWay}" Value="True">
                                <Setter Property="Width" Value="275"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!--Row 0 - Menu-->
        <Menu Grid.Row="0" Grid.ColumnSpan="5">
            <MenuItem Header="File">
                <MenuItem Header="Add New Exercise" Command="{Binding AddExerciseCommand}"/>
                <Separator/>
                <MenuItem Header="Generate Random Workout" Command="{Binding RandomWorkoutCommand}"/>
                <MenuItem Header="Save Random Workout" Command="{Binding SaveRandomWorkoutCommand}"
                              CommandParameter="{Binding SelectedWorkout, Mode=OneWay}"/>
                <Separator/>
                <MenuItem Header="Build Custom Workout" Command="{Binding CustomWorkoutCommand}"/>
                <Separator/>
                <MenuItem Header="Update Current Workout" Command="{Binding UpdateWorkoutCommand}"/>
                <Separator/>
                <MenuItem Header="Start Current Workout" CommandParameter="{Binding SelectedWorkout, Mode=Default}"
                              Command="{Binding StartWorkoutCommand}"/>
                <Separator/>
                <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}"/>
            </MenuItem>
            <MenuItem Header="Options">
                <MenuItem Header="Config" Command="{Binding OpenConfigCommand}"/>
            </MenuItem>
        </Menu>
        <!--Coloumn 1 - Exercises-->
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--ExercisesLabel-->
            <Label Grid.Row="0" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch"
               VerticalAlignment="Stretch">
                <TextBlock Text="Exercises"
                           Margin="3"/>
            </Label>
            <!--Filter Controls-->
            <Grid Grid.Row="1" Margin="3,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <RadioButton Grid.Row="0" Grid.Column="0" 
                             Style="{StaticResource ExerciseFilter}"
                             IsChecked="{Binding ExerciseFilter, Converter={StaticResource e2r}, ConverterParameter=FullBody}"
                             GroupName="FilterList" Content="Full Body"/>
                <RadioButton Grid.Row="0" Grid.Column="1" 
                             Style="{StaticResource ExerciseFilter}"
                             IsChecked="{Binding ExerciseFilter, Converter={StaticResource e2r}, ConverterParameter=LowerBody}"
                             GroupName="FilterList" Content="Lower Body"/>
                <RadioButton Grid.Row="0" Grid.Column="2" 
                             Style="{StaticResource ExerciseFilter}"
                             IsChecked="{Binding ExerciseFilter, Converter={StaticResource e2r}, ConverterParameter=UpperBody}"
                             GroupName="FilterList" Content="Upper Body"/>
                <RadioButton Grid.Row="1" Grid.Column="0" 
                             Style="{StaticResource ExerciseFilter}"
                             IsChecked="{Binding ExerciseFilter, Converter={StaticResource e2r}, ConverterParameter=Cardio}"
                             GroupName="FilterList" Content="Cardio"/>
                <RadioButton Grid.Row="1" Grid.Column="1" 
                             Style="{StaticResource ExerciseFilter}"
                             IsChecked="{Binding ExerciseFilter, Converter={StaticResource e2r}, ConverterParameter=Core}"
                             GroupName="FilterList" Content="Core"/>
                <RadioButton Grid.Row="1" Grid.Column="2"
                             Style="{StaticResource ExerciseFilter}"
                             IsChecked="{Binding ExerciseFilter, Converter={StaticResource e2r}, ConverterParameter=All}"
                             GroupName="FilterList" Content="All"/>
            </Grid>
            <!--ExercisesList-->
            <ListView Grid.Row="2" Grid.Column="0"
                      ItemsSource="{Binding Exercises}"
                      BorderThickness="0"
                      Margin="2">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ExerciseName}" ToolTip="{Binding Description}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add to Workout" Command="{Binding AddToWorkoutCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>
        </Grid>
        <!--Coloumn 2 - Workouts-->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--Workouts Label-->
            <Label Grid.Row="0" Grid.Column="1" 
                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock Text="Workouts" Margin="3"/>
            </Label>
            <!--Workouts List-->
            <ListView ItemsSource="{Binding Workouts, Mode=OneWay}"
                          SelectedItem="{Binding SelectedWorkout, Mode=OneWayToSource}"
                          Grid.Column="1" Grid.Row="1" BorderThickness="0" Margin="2">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding Name}" FontWeight="DemiBold"/>
                            <TextBlock Grid.Row="1" Text="{Binding Description}"
                                           Foreground="{StaticResource ListViewContrastColour}"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete Workout" 
                                  Command="{Binding DeleteWorkoutCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>
        </Grid>
        <!--Coloumn 3 - Selected Workout-->
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--Selected Workout Label-->
                <Label Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <TextBox Text="{Binding SelectedWorkout.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Margin="3"/>
                </Label>
                <!--Selected Workout-->
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0">
                        <TextBox Text="{Binding SelectedWorkout.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     FontSize="12" FontWeight="Normal"
                                     Foreground="{StaticResource ListViewContrastColour}"
                                     VerticalAlignment="Center" BorderThickness="0" />
                    </Label>
                    <!--Workout Parameters-->
                    <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center">
                        <Label Content="Reps:"
                                   Style="{StaticResource WorkoutProperty}"
                                   Visibility="{Binding WorkoutSelected, Converter={StaticResource b2vh}}"/>
                        <Label Content="{Binding SelectedWorkout.RepSeconds}"
                                   VerticalContentAlignment="Stretch" Width="45" 
                                   FontWeight="Normal" FontSize="12"/>
                        <Label Content="Rests:"
                                   Style="{StaticResource WorkoutProperty}"
                                   Visibility="{Binding WorkoutSelected, Converter={StaticResource b2vh}}"/>
                        <Label Content="{Binding SelectedWorkout.RestSeconds}"
                                   Width="45" FontWeight="Normal" FontSize="12"
                                   VerticalContentAlignment="Stretch"/>
                        <Label Content="Sets:"
                                   Visibility="{Binding WorkoutSelected, Converter={StaticResource b2vh}}"
                                   Style="{StaticResource WorkoutProperty}"/>
                        <Label Content="{Binding SelectedWorkout.SetSeconds}"
                                   VerticalContentAlignment="Stretch" Width="45"
                                   FontWeight="Normal" FontSize="12"/>
                    </StackPanel>
                    <!--Workout Stations List-->
                    <ListView ItemsSource="{Binding SelectedWorkout.Stations}" 
                              Grid.Row="2" BorderThickness="0" Margin="2"
                              ItemContainerStyle="{StaticResource NoMouseOver}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="3*"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" FontSize="12" Padding="0,5"
                                               Content="{Binding StationName}"
                                               HorizontalContentAlignment="Left"/>
                                    <!--Exercises Lists-->
                                    <ListView ItemsSource="{Binding Exercises}" Grid.Row="1" BorderThickness="0"
                                              HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                              ItemContainerStyle="{StaticResource NoMouseOver}">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding ExerciseName}">
                                                    <TextBlock.ToolTip>
                                                        <ToolTip MaxWidth="200" Background="White">
                                                            <TextBlock Text="{Binding Description}"
                                                                           TextWrapping="Wrap"
                                                                           HorizontalAlignment="Stretch"
                                                                           VerticalAlignment="Stretch"/>
                                                        </ToolTip>
                                                    </TextBlock.ToolTip>
                                                     </TextBlock>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Grid>
        </Grid>
        <!--Coloumn 4 - Timer-->
        <Grid Grid.Row="1" Grid.Column="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--Timer Label-->
            <Label Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                <TextBlock Text="Timer" Margin="3"/>
            </Label>
            <!--Timer Body Grid-->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <!--StationNum-->
                <StackPanel Orientation="Vertical"
                            Grid.Row="0"
                            Grid.Column="0">
                    <Label Content="Station"
                           FontWeight="Normal"
                           FontSize="12"
                           HorizontalContentAlignment="Center"/>
                    <Label Content="{Binding Timer.StationNumText}"
                           VerticalContentAlignment="Center"
                           HorizontalContentAlignment="Center"/>
                </StackPanel>
                <!--ExerciseNum-->
                <StackPanel Orientation="Vertical"
                            Grid.Row="0"
                            Grid.Column="1">
                    <Label Content="Exercise"
                           FontWeight="Normal"
                           FontSize="12"
                           HorizontalContentAlignment="Center"/>
                    <Label Content="{Binding Timer.ExerciseNumText}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </StackPanel>
                <!--RoundNum-->
                <StackPanel Orientation="Vertical"
                            Grid.Row="0"
                            Grid.Column="2">
                    <Label Content="Round"
                           FontWeight="Normal"
                           FontSize="12"
                           HorizontalContentAlignment="Center"/>
                    <Label Content="{Binding Timer.RoundNumText}"
                           VerticalContentAlignment="Center"
                           HorizontalContentAlignment="Center"/>
                </StackPanel>
                <!--Time Elapsed & To Go-->
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Elapsed:" Style="{StaticResource TimeSpanLabel}"/>
                    <Label Grid.Column="1" Content="{Binding Timer.TimeElapsed}" Style="{StaticResource TimeSpanLabel}"/>
                    <Label Grid.Column="2" Content="To Go:" Style="{StaticResource TimeSpanLabel}"/>
                    <Label Grid.Column="3" Content="{Binding Timer.TimeToGo}" Style="{StaticResource TimeSpanLabel}"/>
                </Grid>
                <!--Clock-->
                <TextBlock Grid.Row="2" Grid.Column="0"
                           Grid.RowSpan="2" Grid.ColumnSpan="3"
                           VerticalAlignment="Center" HorizontalAlignment="Center"
                           Style="{StaticResource Clock}"
                           Text="{Binding Timer.TimerText}"/>
                <!--Current Exercise & Description-->
                <StackPanel Grid.Row="4" Grid.ColumnSpan="3" Orientation="Vertical">
                    <Label Content="{Binding Timer.ExerciseNameText}" FontSize="18"
                               VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                    <TextBlock Text="{Binding Timer.ExerciseDescriptionText}"
                                   FontWeight="Normal" FontSize="12" TextWrapping="Wrap" Margin="5,0"
                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </StackPanel>
                <!--PlayBar-->
                <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" 
                      Background="{StaticResource PlayPauseBarColour}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--Play Button-->
                    <Button Grid.Column="1" Height="40" Width="40"
                            BorderThickness="0" Background="Transparent"
                            HorizontalAlignment="Center"
                            Command="{Binding PlayPauseWorkoutCommand}">
                        <Image Source="{Binding Timer.PlayPauseButtonSource}"/>
                    </Button>
                    <!--Stop Button-->
                    <Button Grid.Column="2" Height="20" Width="40"
                            Background="AliceBlue"
                            Command="{Binding StopWorkoutCommand}"
                            IsEnabled="{Binding WorkoutActive, Mode=OneWay}"
                            HorizontalAlignment="Center" Content="Stop">
                    </Button>
                </Grid>
            </Grid>
        </Grid>
        <!--Coloumn 5 Custom Workout-->
        <Grid Grid.Row="1" Grid.Column="5"
              Margin="5" DataContext="{Binding CustomWorkout}">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <!--Workout Name-->
            <TextBox Grid.Row="0" Text="{Binding Name, Mode=TwoWay}" 
                     HorizontalAlignment="Center" VerticalAlignment="Center"
                     BorderThickness="0"
                     FontSize="18" FontWeight="DemiBold"/>
            <!--Workout Description-->
            <TextBox Grid.Row="1" Text="{Binding Description, Mode=TwoWay}"
                     BorderThickness="0"
                     VerticalAlignment="Center" Foreground="{StaticResource ListViewContrastColour}"/>
            <!--Workout Listview-->
            <ListView Grid.Row="2" ItemsSource="{Binding Stations, Mode=OneWay}" 
                      ItemContainerStyle="{StaticResource NoMouseOver}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <!--Station Listview-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="15"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding StationName}" FontWeight="DemiBold"/>
                            <ListView Grid.Row="1" ItemsSource="{Binding Exercises, Mode=OneWay}" BorderThickness="0"
                                      ItemContainerStyle="{StaticResource NoMouseOver}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="{Binding ExerciseName, Mode=OneWay}" ToolTip="{Binding Description, Mode=OneWay}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Remove From Workout"
                                              Command="{Binding Source={StaticResource vm}, Path=RemoveFromWorkoutCommand}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <!--Control Bar-->
            <Grid Grid.Row="3" Margin="0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Style="{StaticResource CustomWorkoutButton}"
                        Command="{Binding Source={StaticResource vm}, Path=SaveCustomWorkoutCommand}"
                        CommandParameter="{Binding Source={StaticResource vm}, Path=CustomWorkout}">
                    <TextBlock Text="Save"/>
                </Button>
                <Button Grid.Column="1" Style="{StaticResource CustomWorkoutButton}"
                        Command="{Binding Source={StaticResource vm}, Path=AbortCustomWorkoutCommand}">
                    <TextBlock Text="Cancel"/>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>